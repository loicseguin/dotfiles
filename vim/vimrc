set nocompatible   " Break backward compatibility with vi
set nomodeline     " Avoid some security issues with modelines

filetype plugin indent on
syntax enable

" vim package management {{{
packadd! gruvbox-material
set rtp+=/opt/homebrew/opt/fzf
" }}}

" General options {{{
"""""""""""""""""
set autoread                    " Reread file automatically if modified outside of Vim
set autowrite                   " Write file automatically upon some actions (see help)
set history=1000                " Longer history
set encoding=utf-8              " Default encoding
set visualbell t_vb=            " Disable the bell
set path=**                     " Search all files in current directory
set backspace=indent,eol,start  " Backspace for dummies
set complete-=i                 " Disable completing keyword in included files
set completeopt=menuone,noselect
set mouse=a                     " Enable mouse in all modes
set updatetime=250
set timeoutlen=300
" }}}

" netrw {{{
"""""""
let g:netrw_banner=0
" }}}

" Vim UI {{{
""""""""
set showmatch                   " Highlight matching parentheses
set wildmenu                    " Show command auto-completion matches in status line
set wildmode=list:longest,full  " Command completion, list matches, then longest common part, then all.
set wildignore=*.pyc,*.bak      " Ignore these patterns in filename completions
set relativenumber              " Show relative line numbers
set number                      " Show line number of current line
set laststatus=2                " Show status line
set noshowmode                  " Don't show mode since it is in status line
set ruler                       " Show line/col number
set scrolloff=4                 " Keep context visible around cursor line

" Colors
set termguicolors
set background=dark
let g:gruvbox_material_better_performance = 1
let g:gruvbox_material_foreground = 'mix'
colorscheme gruvbox-material
let g:lightline = {'colorscheme': 'seoul256'}

" Show hidden characters
"set list
set listchars=tab:▸\ ,eol:¬,trail:⋅,nbsp:␣

" }}}

" Persistent undo {{{
"""""""""""""""""
if has('persistent_undo')
    set undofile
    set undolevels=1000
    set undoreload=10000
endif
" }}}

" Backups {{{
"""""""""
set backup
set noswapfile
if has("win32") || has("win64")
    set undodir=$HOME/vimfiles/tmp/undo/
    set backupdir=$HOME/vimfiles/tmp/backup/
else
    set undodir=$HOME/.vim/tmp/undo/
    set backupdir=$HOME/.vim/tmp/backup/
endif
" }}}

" Search options {{{
""""""""""""""""
set incsearch
set hlsearch
set ignorecase
set smartcase
" }}}

" Formatting {{{
""""""""""""
set nowrap         " Do not wrap long lines
set autoindent     " Indent at the same level of the previous line
set tabstop=4      " Use four spaces for tabs
set shiftwidth=4
set softtabstop=4
set expandtab      " Spaces, not tabs
set textwidth=79   " Wrap lines after 79 characters
" }}}

" Key mappings {{{
""""""""""""""
let mapleader=" "  " Use space instead of \ for leader

" Set space to do nothing in normal and visual mode
nnoremap <space> <nop>
vnoremap <space> <nop>

" Better navigation between split windows
nnoremap <C-j> <C-W><C-j>
nnoremap <C-k> <C-W><C-k>
nnoremap <C-l> <C-W><C-l>
nnoremap <C-h> <C-W><C-h>

" Yank to end of line with Y
nnoremap Y y$

" Move between screen lines, not real lines
nnoremap j gj
nnoremap k gk

" Visual shifting (does not exit Visual mode)
vnoremap < <gv
vnoremap > >gv

" Buffer navigation
nnoremap <leader>bb :b#<CR>
nnoremap <leader>bp :bp<CR>
nnoremap <leader>bn :bn<CR>
nnoremap <leader>bd :bd<CR>

" Toggle search highlighting
nnoremap <silent> <leader>h :set invhlsearch<CR>

" Quickly edit/reload vimrc file
nnoremap <silent> <leader>ve :e $MYVIMRC<CR>
nnoremap <silent> <leader>vs :so $MYVIMRC<CR>

" Spell checking
nnoremap <leader>ss :set spell!<CR>
nnoremap <leader>sf :set spelllang=fr<CR>
nnoremap <leader>se :set spelllang=en<CR>

" Delete all trailing spaces in a file.
nnoremap <silent> <leader>t :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>

" Fugitive plugin keymaps
nnoremap <silent> <leader>gs :Git<CR>
nnoremap <silent> <leader>gc :Git commit<CR>
nnoremap <silent> <leader>gd :Gdiff<CR>
nnoremap <silent> <leader>gl :Glog<CR>
nnoremap <silent> <leader>gp :Git push<CR>

" fzf
nnoremap <leader>f :FZF<CR>

" }}}

" GnuPG Extensions{{{

" Tell the GnuPG plugin to armor new files.
let g:GPGPreferArmor=1

" Tell the GnuPG plugin to sign new files.
let g:GPGPreferSign=1

augroup GnuPGExtra
    " Set extra file options.
    autocmd BufReadCmd,FileReadCmd *.\(gpg\|asc\|pgp\) call SetGPGOptions()
    " Automatically close unmodified files after inactivity.
    autocmd CursorHold *.\(gpg\|asc\|pgp\) quit
augroup END

function! SetGPGOptions()
    set updatetime=60000   " Set updatetime to 1 minute.
    set foldmethod=marker  " Fold at markers.
    set foldclose=all      " Automatically close all folds.
    set foldopen=insert    " Only open folds with insert commands.
endfunction
" }}}
